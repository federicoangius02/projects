[Container] 2025/04/01 22:50:22.181979 Running on CodeBuild On-demand
[Container] 2025/04/01 22:50:22.181993 Waiting for agent ping
[Container] 2025/04/01 22:50:22.483823 Waiting for DOWNLOAD_SOURCE
[Container] 2025/04/01 22:50:24.427000 Phase is DOWNLOAD_SOURCE
[Container] 2025/04/01 22:50:24.557693 CODEBUILD_SRC_DIR=/codebuild/output/src2868465106/src
[Container] 2025/04/01 22:50:24.558442 YAML location is /codebuild/readonly/buildspec.yml
[Container] 2025/04/01 22:50:24.561018 Setting HTTP client timeout to higher timeout for S3 source
[Container] 2025/04/01 22:50:24.561127 Processing environment variables
[Container] 2025/04/01 22:50:24.837577 No runtime version selected in buildspec.
[Container] 2025/04/01 22:50:24.867319 Moving to directory /codebuild/output/src2868465106/src
[Container] 2025/04/01 22:50:24.867383 Cache is not defined in the buildspec
[Container] 2025/04/01 22:50:24.963886 Skip cache due to: no paths specified to be cached
[Container] 2025/04/01 22:50:24.964244 Registering with agent
[Container] 2025/04/01 22:50:25.051235 Phases found in YAML: 3
[Container] 2025/04/01 22:50:25.051260  PRE_BUILD: 4 commands
[Container] 2025/04/01 22:50:25.051265  BUILD: 6 commands
[Container] 2025/04/01 22:50:25.051270  POST_BUILD: 8 commands
[Container] 2025/04/01 22:50:25.051666 Phase complete: DOWNLOAD_SOURCE State: SUCCEEDED
[Container] 2025/04/01 22:50:25.051681 Phase context status code:  Message: 
[Container] 2025/04/01 22:50:25.198766 Entering phase INSTALL
[Container] 2025/04/01 22:50:25.299943 Phase complete: INSTALL State: SUCCEEDED
[Container] 2025/04/01 22:50:25.299969 Phase context status code:  Message: 
[Container] 2025/04/01 22:50:25.358622 Entering phase PRE_BUILD
[Container] 2025/04/01 22:50:25.462504 Running command echo "Logging in to Amazon ECR..."
Logging in to Amazon ECR...

[Container] 2025/04/01 22:50:25.468398 Running command aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

[Container] 2025/04/01 22:50:38.485850 Running command IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

[Container] 2025/04/01 22:50:38.521809 Running command IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

[Container] 2025/04/01 22:50:38.527292 Phase complete: PRE_BUILD State: SUCCEEDED
[Container] 2025/04/01 22:50:38.527310 Phase context status code:  Message: 
[Container] 2025/04/01 22:50:38.579895 Entering phase BUILD
[Container] 2025/04/01 22:50:38.581365 Running command echo "Building Docker image from App directory..."
Building Docker image from App directory...

[Container] 2025/04/01 22:50:38.586692 Running command cd AWS/Terraform/Dockerized_Web_App_con_CICD/App

[Container] 2025/04/01 22:50:38.591528 Running command docker build -t $ECR_REPOSITORY .
Sending build context to Docker daemon  36.35kB

Step 1/7 : FROM node:20-alpine
20-alpine: Pulling from library/node
f18232174bc9: Pulling fs layer
8cc209e5911c: Pulling fs layer
d7a069a788e0: Pulling fs layer
42ec265e2954: Pulling fs layer
42ec265e2954: Waiting
d7a069a788e0: Verifying Checksum
d7a069a788e0: Download complete
f18232174bc9: Verifying Checksum
f18232174bc9: Download complete
8cc209e5911c: Verifying Checksum
8cc209e5911c: Download complete
f18232174bc9: Pull complete
42ec265e2954: Verifying Checksum
42ec265e2954: Download complete
8cc209e5911c: Pull complete
d7a069a788e0: Pull complete
42ec265e2954: Pull complete
Digest: sha256:8bda036ddd59ea51a23bc1a1035d3b5c614e72c01366d989f4120e8adca196d4
Status: Downloaded newer image for node:20-alpine
 ---> 5885a9462a2f
Step 2/7 : WORKDIR /app
 ---> Running in 00b3247a0ae4
Removing intermediate container 00b3247a0ae4
 ---> 297dd25ac1c2
Step 3/7 : COPY package*.json ./
 ---> c6ec8d062aee
Step 4/7 : RUN npm install --only=production
 ---> Running in 87475b759d88
npm warn config only Use `--omit=dev` to omit dev dependencies from the install.

added 69 packages, and audited 70 packages in 1s

14 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice
npm notice New major version of npm available! 10.8.2 -> 11.2.0
npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.2.0
npm notice To update run: npm install -g npm@11.2.0
npm notice
Removing intermediate container 87475b759d88
 ---> 314b4208ef0c
Step 5/7 : COPY src ./src
 ---> 3adb69866fa0
Step 6/7 : EXPOSE 3000
 ---> Running in a747dcf26b64
Removing intermediate container a747dcf26b64
 ---> 142adde6be52
Step 7/7 : CMD ["npm", "start"]
 ---> Running in 2a1055c75efa
Removing intermediate container 2a1055c75efa
 ---> 4d509ebd1ac2
Successfully built 4d509ebd1ac2
Successfully tagged my-web-app:latest

[Container] 2025/04/01 22:50:47.606536 Running command docker tag $ECR_REPOSITORY:latest $IMAGE_URI

[Container] 2025/04/01 22:50:47.637480 Running command docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

[Container] 2025/04/01 22:50:47.663320 Running command cd ../../..

[Container] 2025/04/01 22:50:47.670673 Phase complete: BUILD State: SUCCEEDED
[Container] 2025/04/01 22:50:47.670686 Phase context status code:  Message: 
[Container] 2025/04/01 22:50:47.722122 Entering phase POST_BUILD
[Container] 2025/04/01 22:50:47.723471 Running command echo "Pushing Docker images..."
Pushing Docker images...

[Container] 2025/04/01 22:50:47.730986 Running command docker push $IMAGE_URI
The push refers to repository [864899833939.dkr.ecr.eu-south-1.amazonaws.com/my-web-app]
5f11dbcd5ffb: Preparing
086307468298: Preparing
f9c0980ed69e: Preparing
ff4003f00445: Preparing
71966995f05c: Preparing
31d5ff869df5: Preparing
4f35fe5263c7: Preparing
08000c18d16d: Preparing
31d5ff869df5: Waiting
4f35fe5263c7: Waiting
08000c18d16d: Waiting
71966995f05c: Layer already exists
31d5ff869df5: Layer already exists
4f35fe5263c7: Layer already exists
08000c18d16d: Layer already exists
ff4003f00445: Pushed
5f11dbcd5ffb: Pushed
f9c0980ed69e: Pushed
086307468298: Pushed
10442ee: digest: sha256:c1e370f7cb475298b720f6bdcd1389fe2bcc5798f9f2703ad6c62221324768b6 size: 1991

[Container] 2025/04/01 22:50:49.098257 Running command docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
The push refers to repository [864899833939.dkr.ecr.eu-south-1.amazonaws.com/my-web-app]
5f11dbcd5ffb: Preparing
086307468298: Preparing
f9c0980ed69e: Preparing
ff4003f00445: Preparing
71966995f05c: Preparing
31d5ff869df5: Preparing
4f35fe5263c7: Preparing
08000c18d16d: Preparing
31d5ff869df5: Waiting
4f35fe5263c7: Waiting
08000c18d16d: Waiting
5f11dbcd5ffb: Layer already exists
f9c0980ed69e: Layer already exists
71966995f05c: Layer already exists
ff4003f00445: Layer already exists
086307468298: Layer already exists
31d5ff869df5: Layer already exists
08000c18d16d: Layer already exists
4f35fe5263c7: Layer already exists
latest: digest: sha256:c1e370f7cb475298b720f6bdcd1389fe2bcc5798f9f2703ad6c62221324768b6 size: 1991

[Container] 2025/04/01 22:50:49.385409 Running command echo "Creating image definitions..."
Creating image definitions...

[Container] 2025/04/01 22:50:49.393009 Running command mkdir -p build_artifacts

[Container] 2025/04/01 22:50:49.400879 Running command printf '[{"name":"web-app","imageUri":"%s"}]' $ECR_REGISTRY/$ECR_REPOSITORY:latest > build_artifacts/imagedefinitions.json

[Container] 2025/04/01 22:50:49.408052 Running command echo "Verifying file creation..."
Verifying file creation...

[Container] 2025/04/01 22:50:49.415105 Running command ls -la build_artifacts/
total 4
drwxr-xr-x 2 root root 35 Apr  1 22:50 .
drwxr-xr-x 5 root root 70 Apr  1 22:50 ..
-rw-r--r-- 1 root root 97 Apr  1 22:50 imagedefinitions.json

[Container] 2025/04/01 22:50:49.427357 Phase complete: POST_BUILD State: SUCCEEDED
[Container] 2025/04/01 22:50:49.427374 Phase context status code:  Message: 
[Container] 2025/04/01 22:50:49.597375 Expanding base directory path: .
[Container] 2025/04/01 22:50:49.600632 Assembling file list
[Container] 2025/04/01 22:50:49.600648 Expanding .
[Container] 2025/04/01 22:50:49.603677 Expanding file paths for base directory .
[Container] 2025/04/01 22:50:49.603692 Assembling file list
[Container] 2025/04/01 22:50:49.603696 Expanding build_artifacts/imagedefinitions.json
[Container] 2025/04/01 22:50:49.606550 Skipping invalid file path build_artifacts/imagedefinitions.json
[Container] 2025/04/01 22:50:49.607179 Set report auto-discover timeout to 5 seconds
[Container] 2025/04/01 22:50:49.607281 Expanding base directory path:  .
[Container] 2025/04/01 22:50:49.610477 Assembling file list
[Container] 2025/04/01 22:50:49.610490 Expanding .
[Container] 2025/04/01 22:50:49.613682 Expanding file paths for base directory .
[Container] 2025/04/01 22:50:49.613696 Assembling file list
[Container] 2025/04/01 22:50:49.613796 Expanding **/*
[Container] 2025/04/01 22:50:49.639804 No matching auto-discover report paths found
[Container] 2025/04/01 22:50:49.639850 Report auto-discover file discovery took 0.032671 seconds
[Container] 2025/04/01 22:50:49.639867 Phase complete: UPLOAD_ARTIFACTS State: FAILED
[Container] 2025/04/01 22:50:49.639874 Phase context status code: CLIENT_ERROR Message: no matching artifact paths found
no matching artifact paths found